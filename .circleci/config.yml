# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

# build_defaults: &build_defaults
#   docker:
#     - image: circleci/node:10-stretch
#       auth:
#         username: $DOCKER_USER
#         password: $DOCKER_PASS
#   environment:
#     STAGE: local
#     SERVICE_NAME: swashbuckler-site

# version: 2
# jobs:
#   build:
#     <<: *build_defaults
#     steps:
#       - checkout
#       - run:
#           name: Add node_modules/bin to PATH
#           command: echo 'export PATH=~/project/node_modules/.bin:$PATH' >> $BASH_ENV
#       - restore_cache:
#           key: dependency-cache-{{ checksum "package.json" }}
#       - run:
#           name: Install dependencies
#           command: yarn
#       - save_cache:
#           paths:
#             ~/.cache/yarn
#           key: dependency-cache-{{ checksum "package.json" }}
#       - run:
#           name: Build
#           command: CI=false yarn build
#       # - run:
#       #     name: Lint
#       #     command: yarn run lint
#       # - run:
#       #     name: Test
#       #     command: yarn test
#       # - run:
#       #     name: Security check for npm packages
#       #     command: nsp check
#       - setup_remote_docker
#       - deploy:
#           name: Deploy to prod
#           command: |
#             if [ "${CIRCLE_BRANCH}" == "master" ]; then
#               docker login -u $DOCKER_USER -p $DOCKER_PASS
#               docker build -f ./Dockerfile --rm=false -t buccaneerai/$SERVICE_NAME:$CIRCLE_SHA1 .
#               docker push buccaneerai/$SERVICE_NAME:$CIRCLE_SHA1
#             fi
# workflows:
#   version: 2
#   build_test_deploy:
#       jobs:
#         - build:
#             context: buccaneer
